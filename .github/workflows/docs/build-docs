#!/usr/bin/env python

import argparse
from pathlib import Path
import shutil
import subprocess
import sys

DOCS_DIR = Path(sys.argv[0]).absolute().parent
MODULES_DIR = DOCS_DIR.parent.parent.parent / "modules"
MANUAL_LINK = "https://tket.quantinuum.com/user-manual/index.html"
EXAMPLES_LINK = "https://github.com/CQCL/pytket/tree/main/examples"
PYTKET_DOCS_LINK = "https://tket.quantinuum.com/api-docs/index.html"
PYTKET_AQT_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-aqt/api/index.html"
PYTKET_BRAKET_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-braket/api/index.html"
PYTKET_CIRQ_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-cirq/api/index.html"
PYTKET_IQM_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-iqm/api/index.html"
PYTKET_PENNYLANE_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-pennylane/api/index.html"
PYTKET_PROJECTQ_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-projectq/api/index.html"
PYTKET_PYQUIL_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-pyquil/api/index.html"
PYTKET_PYSIMPLEX_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-pysimplex/api/index.html"
PYTKET_PYZX_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-pyzx/api/index.html"
PYTKET_QIR_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-qir/api/index.html"
PYTKET_QISKIT_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-qiskit/api/index.html"
PYTKET_QSHARP_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-qsharp/api/index.html"
PYTKET_QUANTINUUM_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-quantinuum/api/index.html"
PYTKET_CUTENSORNET_LINK = "https://tket.quantinuum.com/extensions/pytket-cutensornet/api/index.html"
PYTKET_QULACS_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-qulacs/api/index.html"
PYTKET_QUJAX_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-qujax/api/index.html"
PYTKET_STIM_DOCS_LINK = "https://tket.quantinuum.com/extensions/pytket-stim/api/index.html"


def remove_dir(dirpath):
    if dirpath.exists() and dirpath.is_dir():
        shutil.rmtree(dirpath)


def fix_links(filepath):
    with open(filepath, "r", encoding="utf8") as f:
        content = f.read()
    content = content.replace("pytket._tket", "pytket")
    with open(filepath, "w", encoding="utf8") as f:
        f.write(content)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Build HTML documentation for one or more modules."
    )
    parser.add_argument(
        "-m",
        "--modules",
        nargs="*",
        default=[],
        help="names of modules to build (without the `pytket-` prefix)",
    )
    parser.add_argument("-a", "--all", action="store_true", help="build all modules")
    parser.add_argument("-i", "--index", action="store_true", help="build index page")
    parser.add_argument("-d", "--dest", help="copy artifacts into destination folder")
    args = parser.parse_args()

    if args.index:
        print("Building index page...")
        index_rst = DOCS_DIR / "index.rst"
        with open(DOCS_DIR / "intro.txt", "r") as f:
            content = f.readlines()
            content.append(
                "\n.. toctree::\n\t:caption: Extensions:\n\t:maxdepth: 1\n\n"
            )

            content.append(f"\tpytket-aqt <{PYTKET_AQT_DOCS_LINK}>\n")
            content.append(f"\tpytket-braket <{PYTKET_BRAKET_DOCS_LINK}>\n")
            content.append(f"\tpytket-cirq <{PYTKET_CIRQ_DOCS_LINK}>\n")
            content.append(f"\tpytket-iqm <{PYTKET_IQM_DOCS_LINK}>\n")
            content.append(f"\tpytket-pennylane <{PYTKET_PENNYLANE_DOCS_LINK}>\n")
            content.append(f"\tpytket-projectq <{PYTKET_PROJECTQ_DOCS_LINK}>\n")
            content.append(f"\tpytket-pyquil <{PYTKET_PYQUIL_DOCS_LINK}>\n")
            content.append(f"\tpytket-pysimplex <{PYTKET_PYSIMPLEX_DOCS_LINK}>\n")
            content.append(f"\tpytket-pyzx <{PYTKET_PYZX_DOCS_LINK}>\n")
            content.append(f"\tpytket-qir <{PYTKET_QIR_DOCS_LINK}>\n")
            content.append(f"\tpytket-qiskit <{PYTKET_QISKIT_DOCS_LINK}>\n")
            content.append(f"\tpytket-qsharp <{PYTKET_QSHARP_DOCS_LINK}>\n")
            content.append(f"\tpytket-quantinuum <{PYTKET_QUANTINUUM_DOCS_LINK}>\n")
            content.append(f"\tpytket-cutensornet <{PYTKET_CUTENSORNET_LINK}>\n")
            content.append(f"\tpytket-qulacs <{PYTKET_QULACS_DOCS_LINK}>\n")
            content.append(f"\tpytket-qujax <{PYTKET_QUJAX_DOCS_LINK}>\n")
            content.append(f"\tpytket-stim <{PYTKET_STIM_DOCS_LINK}>\n")

            content.append(
                "\n.. toctree::\n\t:caption: More documentation:\n\t:maxdepth: 1\n\n"
            )
            content.append(f"\tpytket <{PYTKET_DOCS_LINK}>\n")
            content.append(f"\tManual <{MANUAL_LINK}>\n")
            content.append(f"\tExample notebooks <{EXAMPLES_LINK}>\n")

        with open(index_rst, "w") as f:
            f.writelines(content)
        remove_dir(DOCS_DIR / "build")
        subprocess.run(
            [
                "sphinx-build",
                "-b",
                "html",
                "-D",
                f"project=pytket-extensions",
                "-D",
                "templates_path=templates",
                ".",
                "build",
            ],
            cwd=DOCS_DIR,
        )
        index_rst.unlink()

    if args.dest is not None:
        dest = Path(args.dest)
        if args.index:
            for f in (DOCS_DIR / "build").iterdir():
                if f.is_dir():
                    shutil.copytree(f, dest / f.name, dirs_exist_ok=True)
                else:
                    shutil.copy(f, dest)
