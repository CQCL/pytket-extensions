#!/bin/bash
set -evu

# Usage:
#
# build-test [mypy|nomypy]
#
# Arguments:
# - mypy: include mypy check ("mypy" or "nomypy")
#
# Environment variables used:
# - MODULE: single module to test
# - GITHUB_WORKSPACE: workspace directory
#
# WARNING: running this locally will delete any local files that
# aren't strictly part of the git tree, including gitignored files!

MYPY=$1

PLAT=`python -c 'import platform; print(platform.system())'`

PYVER=`python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))'`

git clean -dfx

echo "Module to test: ${MODULE}"

MODULEDIR="${GITHUB_WORKSPACE}/modules"

ARTIFACTSDIR=${GITHUB_WORKSPACE}/wheelhouse

rm -rf ${ARTIFACTSDIR} && mkdir ${ARTIFACTSDIR}

python -m pip install --upgrade pip wheel build

function unsupported() {
    case "$1" in
        *)
            false
            ;;
    esac
}

function skip_tests() {
    case "$1" in
        *)
            false
            ;;
    esac
}

# Generate and install the package
if ! (unsupported ${MODULE}) ; then
    echo "${MODULE}..."
    cd ${MODULEDIR}/${MODULE}
    python -m build
    for w in dist/*.whl ; do
        python -m pip install $w
        cp $w ${ARTIFACTSDIR}
    done
fi

# Test and mypy:
if [[ "${MYPY}" = "mypy" ]]
then
    python -m pip install --upgrade mypy
fi
if ! (unsupported ${MODULE}) ; then
    if ! (skip_tests ${MODULE}) ; then
        echo "${MODULE}..."

        cd ${MODULEDIR}/${MODULE}/tests

        python -m pip install -r test-requirements.txt

        if [[ "${MODULE}" = "pytket-qsharp" && "${PLAT}" != "Darwin" ]]
        then
            dotnet iqsharp install --user
        fi

        # Disable the remote tests for pytket-aqt and -qsharp for now
        if [[ "${MODULE}" = "pytket-aqt" || "${MODULE}" = "pytket-qsharp" ]]; then
            unset PYTKET_RUN_REMOTE_TESTS; pytest --doctest-modules
        else
            pytest --doctest-modules
        fi

        if [[ "${MYPY}" = "mypy" ]]
        then
            ${MODULEDIR}/mypy-check ${MODULEDIR}/${MODULE}
        fi
    fi
fi
